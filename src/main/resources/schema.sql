--DROP TABLE IF EXISTS users CASCADE;

CREATE TABLE IF NOT EXISTS users (
  id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  username varchar(100),
  password varchar(100),
  email varchar(100),
  role varchar(100)
);

CREATE TABLE IF NOT EXISTS tasks (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  title varchar(100),
  description varchar(100),
  status varchar(64),
  priority varchar(64),
  author_id BIGINT
);

CREATE TABLE IF NOT EXISTS comments (
  id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  body varchar,
  task_id BIGINT,
  commenter_id BIGINT,
  created timestamp
);

CREATE TABLE IF NOT EXISTS tasks_performers (
  id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  task_id BIGINT,
  performer_id BIGINT
);

ALTER TABLE comments ADD FOREIGN KEY (task_id) REFERENCES tasks (id) ON DELETE CASCADE;
ALTER TABLE comments ADD FOREIGN KEY (commenter_id) REFERENCES users (id) ON DELETE CASCADE;
ALTER TABLE tasks ADD FOREIGN KEY (author_id) REFERENCES users (id) ON DELETE CASCADE;
ALTER TABLE tasks_performers ADD FOREIGN KEY (task_id) REFERENCES tasks (id) ON DELETE CASCADE;
ALTER TABLE tasks_performers ADD FOREIGN KEY (performer_id) REFERENCES users (id) ON DELETE CASCADE;
